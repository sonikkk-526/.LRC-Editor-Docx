{"version":3,"file":"js/852.462d19eb.js","mappings":"k4BA2CEA,EAAAA,EAAAA,GACqD,mBADlD,iEAA4DA,EAAAA,EAAAA,GAAmD,SAAhD,iDAA4C,QAAI,sDACjE,G,8GA3CjDC,GAsCAD,EAAAA,EAAAA,GAGI,mBAHD,kBACWE,EAAAA,EAAAA,IAAsEC,EAAA,CAAzDC,GAAI,CAAAC,KAAA,iBAAsB,C,kBAAE,iBAAgB,UAAhB,oB,mBAA6B,sHAGpFC,GAEAN,EAAAA,EAAAA,GAAiC,OAA5BO,GAAG,WAAYC,IAAIC,EAAAC,Q,WACxBV,EAAAA,EAAAA,GAAiC,OAA5BO,GAAG,WAAYC,IAAIC,EAAAE,Q,eAI1B,SACEC,KAAM,iBAAO,CACXF,OAAQG,EAAQ,MAChBF,OAAQE,EAAQ,MACjB,G,YCjDH,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,G","sources":["webpack://lrc-docs/./src/components/Pages/Trim/InverseOption.vue","webpack://lrc-docs/./src/components/Pages/Trim/InverseOption.vue?f6b6"],"sourcesContent":["<template>\r\n  <h1>Understanding the Inverse Option</h1>\r\n  <p>Consider the below examples (skipping occurrence is still <code>2</code>):</p>\r\n  <div class=\"block-container\">\r\n    <div>\r\n      <span>Top-Bottom:</span>\r\n      <blockquote>\r\n        <p>\r\n          <s>a</s> //skipped<br>\r\n          <s>b</s> //skipped<br>\r\n          c<br>\r\n          <s>d</s> //skipped<br>\r\n          <s>e</s> //skipped<br>\r\n          f\r\n        </p>\r\n      </blockquote> \r\n    </div>\r\n    <div>\r\n      <span>Bottom-Top:</span>\r\n      <blockquote>\r\n        <p>\r\n          a<br>\r\n          <s>b</s> //skipped<br>\r\n          <s>c</s> //skipped<br>\r\n          d<br>\r\n          <s>e</s> //skipped<br>\r\n          <s>f</s> //skipped\r\n        </p>\r\n      </blockquote>\r\n    </div>\r\n  </div>\r\n\r\n  <p>\r\n    Notice how skipping lines from top-bottom and bottom-top yield different outputs: {c, f} & {a, d} (respectively);\r\n    that's the concept of the \"inverse selection\" option!\r\n  </p>\r\n\r\n  <!-- Page Divider -->\r\n  <h1>Using Inverse Option to match the pattern</h1>\r\n  <p>\r\n    By reading \"<RouterLink :to=\"{name: 'trimShowcase'}\">The nitty-gritty</RouterLink>\" from the last page,\r\n    we learned that \"Lyrics Trimming\" works by utilizing a pattern in your translated lyrics.\r\n  </p>\r\n  <p>In order for us to get the other languages, we create lines <u>(the x's indicates new lines; if applicable)</u>\r\n    to help us to preserve the constant occurrence:</p>\r\n  <img id=\"showcase\" :src=img_01 />\r\n  <img id=\"showcase\" :src=img_02 />\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data: () => ({\r\n    img_01: require(`@/assets/img/screenshots/trim/result_02.png`),\r\n    img_02: require(`@/assets/img/screenshots/trim/result_03.png`)\r\n  })\r\n}\r\n</script>","import { render } from \"./InverseOption.vue?vue&type=template&id=52268146\"\nimport script from \"./InverseOption.vue?vue&type=script&lang=js\"\nexport * from \"./InverseOption.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","_hoisted_1","_createVNode","_component_RouterLink","to","name","_hoisted_6","id","src","_ctx","img_01","img_02","data","require","__exports__","render"],"sourceRoot":""}